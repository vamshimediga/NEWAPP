@model FileViewModel;
@{
    ViewData["Title"] = "FileCreate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "File", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.FileId, "File ID", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.FileId, new { @class = "form-control", @placeholder = "Enter File ID" })
        @Html.ValidationMessageFor(m => m.FileId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FileName, "File Name", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.FileName, new { @class = "form-control", @placeholder = "Enter File Name" })
        @Html.ValidationMessageFor(m => m.FileName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FileSize, "File Size (MB)", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.FileSize, new { @class = "form-control", @placeholder = "Enter File Size" })
        @Html.ValidationMessageFor(m => m.FileSize, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FileType, "File Type", new { @class = "form-label" })
        @Html.DropDownListFor(m => m.FileType, ViewBag.FileTypes as SelectList, "Select File Type", new { @class = "form-select" })
        @Html.ValidationMessageFor(m => m.FileType, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.UploadDate, "Upload Date", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.UploadDate, new { @type = "date", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.UploadDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group form-check">
        @Html.CheckBoxFor(m => m.IsArchived, new { @class = "form-check-input" })
        @Html.LabelFor(m => m.IsArchived, "Is Archived", new { @class = "form-check-label" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.OwnerName, "Owner Name", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.OwnerName, new { @class = "form-control", @placeholder = "Enter Owner Name" })
        @Html.ValidationMessageFor(m => m.OwnerName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.OwnerEmail, "Owner Email", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.OwnerEmail, new { @class = "form-control", @placeholder = "Enter Owner Email" })
        @Html.ValidationMessageFor(m => m.OwnerEmail, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Notes, "Notes", new { @class = "form-label" })
        @Html.TextAreaFor(m => m.Notes, new { @class = "form-control", @placeholder = "Enter Notes", rows = 3 })
        @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Tags, "Tags (comma-separated)", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.Tags, new { @class = "form-control", @placeholder = "Enter Tags" })
        @Html.ValidationMessageFor(m => m.Tags, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
}
