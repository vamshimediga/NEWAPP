@model NEWAPP.Models.MeetingViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.IsCreateView != null && ViewBag.IsCreateView == true)
{
    <!-- Create View (Form) -->
    <h2>Create New Meeting</h2>
    @using (Html.BeginForm("Create", "Meeting", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.MeetingDate, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.MeetingDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CampaignID, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.CampaignID, new SelectList(Model.Campaigns, "CampaignID", "CampaignName"), "-- Select Campaign --", new { @class = "form-control" })
           
        </div>



        <button type="submit" class="btn btn-primary">Create</button>
    }
}

@if (ViewBag.IsEditView != null && ViewBag.IsEditView == true)
{
    <!-- Edit View (Form) -->
    <h2>Edit Meeting</h2>
    @using (Html.BeginForm("Edit", "Meeting", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.MeetingID, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.MeetingID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MeetingDate, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.MeetingDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CampaignID, htmlAttributes: new { @class = "form-label" })
            @Html.DropDownListFor(model => model.CampaignID, new SelectList(Model.Campaigns, "CampaignID", "CampaignName"), "-- Select Campaign --", new { @class = "form-control" })
        </div>

        <button type="submit" class="btn btn-primary">Update</button>
    }
}
@if (ViewBag.IsDeleteView != null && ViewBag.IsDeleteView == true)
{
    <!-- Delete View (Confirmation) -->
    <h2>Delete Meeting</h2>
    <p>Are you sure you want to delete this meeting?</p>
    <h2>Meeting Details</h2>
    <div>
        <strong>Meeting ID:</strong> @Model.MeetingID
    </div>
    <div>
        <strong>Campaign ID:</strong> @Model.CampaignID
    </div>
    <div>
        <strong>Meeting Date:</strong> @Model.MeetingDate
    </div>
    <div>
        <strong>Location:</strong> @Model.Location
    </div>
    <div>
        <strong>Description:</strong> @Model.Description
    </div>
    <form method="post">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger">Delete</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </form>
}

