@model FlatViewModel
@using DomainModels;
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>FlatViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("Create", "Flat", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.FlatID, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.FlatID, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FlatID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PropertyOwnerID, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PropertyOwnerID, new SelectList(Model.PropertyOwners, "PropertyOwnerID", "OwnerFullName"),"--Please Select--" ,new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PropertyOwnerID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FlatNumber, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.FlatNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FlatNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">Gender</label><br />
                @foreach (var gender in Enum.GetValues(typeof(Gender)))
                {
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, gender) @gender
                    </label>
                }
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>

            <!-- IsActive Checkbox -->
            <div class="form-group">
                <label class="control-label">
                    @Html.CheckBoxFor(model => model.IsActive) Is Active
                </label>
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

